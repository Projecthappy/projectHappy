{"title":"微服务","uid":"4323338174440016aba5335d086cc950","slug":"微服务","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:33:08.865Z","comments":true,"path":"api/articles/微服务.json","keywords":null,"cover":null,"content":"<h1 id=\"一、内容整理\"><a href=\"#一、内容整理\" class=\"headerlink\" title=\"一、内容整理\"></a>一、内容整理</h1><h4 id=\"常见组件有哪些\"><a href=\"#常见组件有哪些\" class=\"headerlink\" title=\"常见组件有哪些\"></a>常见组件有哪些</h4><ul>\n<li>注册中心：nacos</li>\n<li>负载均衡：ribben</li>\n<li>远程调用：feign</li>\n<li>服务熔断降级：sentinel</li>\n<li>网关：gateway</li>\n</ul>\n<h4 id=\"服务注册和发现是什么意思？\"><a href=\"#服务注册和发现是什么意思？\" class=\"headerlink\" title=\"服务注册和发现是什么意思？\"></a>服务注册和发现是什么意思？</h4><p>服务将自己的服务名和 ip 端口号信息发送到注册中心，注册中心保存这些信息并且定时发送心跳信息，判断服务的存活状态<br>服务发现是服务和注册中心会推送和拉取服务信息，发起远程调用时根据负载均衡策略向目标服务发起请求</p>\n<h4 id=\"注册中心-nacos\"><a href=\"#注册中心-nacos\" class=\"headerlink\" title=\"注册中心 nacos\"></a>注册中心 nacos</h4><p>nacos同时支持配置中心，集群默认采用AP模式</p>\n<h4 id=\"ribbon-负载均衡，负载均衡策略，自定义负载均衡\"><a href=\"#ribbon-负载均衡，负载均衡策略，自定义负载均衡\" class=\"headerlink\" title=\"ribbon 负载均衡，负载均衡策略，自定义负载均衡\"></a>ribbon 负载均衡，负载均衡策略，自定义负载均衡</h4><p>feign中已经集成了ribbon，发起调用时，会先从注册中心拉去服务的地址，按照负载均衡策略选择一个地址发送<br>负载均衡有轮询，随机，权重和地域的方式<br>可以通过实现IRule接口自定义，这是全局的负载均衡策略<br>也可以通过再配置文件中配置调用每个服务的负载均衡策略</p>\n<h4 id=\"服务雪崩、熔断降级\"><a href=\"#服务雪崩、熔断降级\" class=\"headerlink\" title=\"服务雪崩、熔断降级\"></a>服务雪崩、熔断降级</h4><p>服务雪崩是指服务的调用链路较长时，后面的服务发生了阻塞等问题，导致整个服务链路的不可用<br>可以使用服务熔断和服务降级的方式避免<br>服务降级：当调用的服务出现异常时的策略<br>服务熔断：当对服务的多次请求出现失败时，会触发熔断机制</p>\n<h4 id=\"微服务的监控-skywalking\"><a href=\"#微服务的监控-skywalking\" class=\"headerlink\" title=\"微服务的监控-skywalking\"></a>微服务的监控-skywalking</h4><p>可以监控接口服务的状态，可以看到哪些服务和结构速度较慢，可以进行针对性的优化</p>\n<h4 id=\"微服务限流（漏桶算法、令牌桶算法）\"><a href=\"#微服务限流（漏桶算法、令牌桶算法）\" class=\"headerlink\" title=\"微服务限流（漏桶算法、令牌桶算法）\"></a>微服务限流（漏桶算法、令牌桶算法）</h4><h4 id=\"分布式系统理论-CAP-和-BASE\"><a href=\"#分布式系统理论-CAP-和-BASE\" class=\"headerlink\" title=\"分布式系统理论-CAP 和 BASE\"></a>分布式系统理论-CAP 和 BASE</h4><p>CAP是分布式项目的一个理论，包括一致性，可用性，分区容错性</p>\n<p>对分布式系统来说分区容错性是必须的，另外在一致性和可用性中只能二选一</p>\n<p>BASE是CAP中AP的延申，主要思想是采取一些措施，使得数据达到最终的一致性。</p>\n<h4 id=\"分布式事务解决方案\"><a href=\"#分布式事务解决方案\" class=\"headerlink\" title=\"分布式事务解决方案\"></a>分布式事务解决方案</h4><p>主要是使用MQ实现的分布式事务，对数据的即时性要求没有那么高，数据是最终一致性的</p>\n<h4 id=\"分布式服务的接口幂等性如何设计\"><a href=\"#分布式服务的接口幂等性如何设计\" class=\"headerlink\" title=\"分布式服务的接口幂等性如何设计\"></a>分布式服务的接口幂等性如何设计</h4><p>使用token的方式，比如在打开订单页面的时候后端返回一个toke给前端，前端提交订单信息时携带token，后端检查token是否存在，存在就往下执行，然后删除token</p>\n<h4 id=\"你们项目中使用了什么分布式任务调度-xxl-job\"><a href=\"#你们项目中使用了什么分布式任务调度-xxl-job\" class=\"headerlink\" title=\"你们项目中使用了什么分布式任务调度-xxl-job\"></a>你们项目中使用了什么分布式任务调度-xxl-job</h4>","text":"一、内容整理常见组件有哪些 注册中心：nacos 负载均衡：ribben 远程调用：feign 服务熔断降级：sentinel 网关：gateway 服务注册和...","permalink":"/post/微服务","photos":[],"count_time":{"symbolsCount":875,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%86%85%E5%AE%B9%E6%95%B4%E7%90%86\"><span class=\"toc-text\">一、内容整理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E6%9C%89%E5%93%AA%E4%BA%9B\"><span class=\"toc-text\">常见组件有哪些</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D%EF%BC%9F\"><span class=\"toc-text\">服务注册和发现是什么意思？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83-nacos\"><span class=\"toc-text\">注册中心 nacos</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ribbon-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%EF%BC%8C%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AD%96%E7%95%A5%EF%BC%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1\"><span class=\"toc-text\">ribbon 负载均衡，负载均衡策略，自定义负载均衡</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E9%9B%AA%E5%B4%A9%E3%80%81%E7%86%94%E6%96%AD%E9%99%8D%E7%BA%A7\"><span class=\"toc-text\">服务雪崩、熔断降级</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%9B%91%E6%8E%A7-skywalking\"><span class=\"toc-text\">微服务的监控-skywalking</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%99%90%E6%B5%81%EF%BC%88%E6%BC%8F%E6%A1%B6%E7%AE%97%E6%B3%95%E3%80%81%E4%BB%A4%E7%89%8C%E6%A1%B6%E7%AE%97%E6%B3%95%EF%BC%89\"><span class=\"toc-text\">微服务限流（漏桶算法、令牌桶算法）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA-CAP-%E5%92%8C-BASE\"><span class=\"toc-text\">分布式系统理论-CAP 和 BASE</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">分布式事务解决方案</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%8E%A5%E5%8F%A3%E5%B9%82%E7%AD%89%E6%80%A7%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">分布式服务的接口幂等性如何设计</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%A0%E4%BB%AC%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E4%BA%86%E4%BB%80%E4%B9%88%E5%88%86%E5%B8%83%E5%BC%8F%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6-xxl-job\"><span class=\"toc-text\">你们项目中使用了什么分布式任务调度-xxl-job</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"金融大数据学习笔记","uid":"a50bc63133e87d6dc96d8b59bc058e1e","slug":"FinancialBigData","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:32:55.304Z","comments":true,"path":"api/articles/FinancialBigData.json","keywords":null,"cover":[],"text":"学习笔记大数据 2001 孙啸冬 1.爬取数据 (1) 爬取时以股票代码作为 URL 中的参数传入，但遇到没有当前股票代码时 DOM 树的结构和正常的不一样，导...","permalink":"/post/FinancialBigData","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"JVM","uid":"0b1381c4a63c09e41167c5168339035a","slug":"JVM","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:33:08.481Z","comments":true,"path":"api/articles/JVM.json","keywords":null,"cover":null,"text":"一、内容整理类加载器什么是类加载器类加载器是将 class 文件加载到 jvm 中，jvm 中有四个类加载器 启动类加载器：由 C++编写，加载 java 的核...","permalink":"/post/JVM","photos":[],"count_time":{"symbolsCount":445,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
{"title":"记录SpringSecurity的一次实践","uid":"5453e6ed3ec87ccc7ede230d55c20b84","slug":"记录SpringSecurity的一次实践","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:33:01.700Z","comments":true,"path":"api/articles/记录SpringSecurity的一次实践.json","keywords":null,"cover":[],"content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>&ensp;&ensp;在项目中需要有用户和管理员登录的功能，用户登陆后观看视频记录观看时长，起先那做的真的时太潦草了完全没有意识，user 一张表，admin 一张表，然后不同的 RequestMapping，后来猛然惊醒，那用户不是可以在不同地方一起登录，一起看视频刷多倍的时长了么，这可不行啊，后来百度了一大圈，最后决定还是用 springsecurity，其实也不是很确定用哪个，但是就感觉它主流一点?</p>\n<p>&ensp;&ensp;一开始看别人的博客的时候都是一头雾水，这怎么怎么就可以了，很少有对每个部分有详细的解释的，后来看了松哥的教程才渐渐的理解，链接：<a href=\"http://www.javaboy.org/springsecurity/\">江南一点雨</a>，这篇博客也是看了松哥文章后的一次总结。</p>\n<hr>\n<h1 id=\"一、简述\"><a href=\"#一、简述\" class=\"headerlink\" title=\"一、简述\"></a>一、简述</h1><p>SpringSecurity 是一个权限管理框架，包括验证用户的密码是否正确，用户的角色是普通用户还是管理员，某项操作是否得到授权等，框架的作用就是让我们少些代码少配置，缺点就是对于初学者来说就一开始比较难上手，在 springboot 中，它可以很方便和其他部分结合，只需要引入依赖就可以保护所有的接口。我们操作的主要是三个部分</p>\n<ul>\n<li><ol>\n<li>实体类 User，它就是 SpringSecurity 给我们定义的实体类<br><img src=\"/image/%E8%AE%B0%E5%BD%95SpringSecurity%E7%9A%84%E4%B8%80%E6%AC%A1%E5%AE%9E%E8%B7%B5/1678377525493.png\" alt=\"1678377525493\"><br>从源码中我们可以看到它实现了 UserDetails 接口，但是他这里实例变量很多，我们可以自己创建实体类并实现 UserDetails 接口</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>UserDetailsService 它是用来获取用户信息，返回 UserDetails 类，我们也可以创建一个类并实现 UserDetailsService 来自定义返回的内容，例如我在项目中的实现：<br><img src=\"/image/%E8%AE%B0%E5%BD%95SpringSecurity%E7%9A%84%E4%B8%80%E6%AC%A1%E5%AE%9E%E8%B7%B5/1678377576565.png\" alt=\"1678377576565\"><br>在数据库中查找是否有对应 userId 的用户没有就抛出 UsernameNotFound 异常，然后在授权中加入用户的角色，最后返回 userBean。</li>\n</ol>\n</li>\n<li>3.WebSecurityConfig 配置类</li>\n</ul>\n<h1 id=\"二、使用步骤\"><a href=\"#二、使用步骤\" class=\"headerlink\" title=\"二、使用步骤\"></a>二、使用步骤</h1><h2 id=\"1-引入依赖\"><a href=\"#1-引入依赖\" class=\"headerlink\" title=\"1.引入依赖\"></a>1.引入依赖</h2><p>在 pom.xml 中加入以下依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-security<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>引入依赖后我们可以先直接运行试一下</p>\n<h2 id=\"2-读入数据\"><a href=\"#2-读入数据\" class=\"headerlink\" title=\"2.读入数据\"></a>2.读入数据</h2><h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1>","feature":true,"text":"前言&ensp;&ensp;在项目中需要有用户和管理员登录的功能，用户登陆后观看视频记录观看时长，起先那做的真的时太潦草了完全没有意识，user 一张表，adm...","permalink":"/post/记录SpringSecurity的一次实践","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E7%AE%80%E8%BF%B0\"><span class=\"toc-text\">一、简述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">二、使用步骤</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%BC%95%E5%85%A5%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">1.引入依赖</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E8%AF%BB%E5%85%A5%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">2.读入数据</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"python学习笔记","uid":"1951cfc2ab359a36c0a77eb791770e2c","slug":"python","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:32:55.464Z","comments":true,"path":"api/articles/python.json","keywords":null,"cover":null,"text":"学习笔记大数据 2001 孙啸冬 1.DataFrame 类读取一列的方式为 dataFrame[‘列名’] 2.DataFrame 类中一列为 Series ...","permalink":"/post/python","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}
{"title":"python学习笔记","uid":"1951cfc2ab359a36c0a77eb791770e2c","slug":"python","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:32:55.464Z","comments":true,"path":"api/articles/python.json","keywords":null,"cover":null,"content":"<h1 id=\"学习笔记\"><a href=\"#学习笔记\" class=\"headerlink\" title=\"学习笔记\"></a>学习笔记</h1><h3 id=\"大数据-2001-孙啸冬\"><a href=\"#大数据-2001-孙啸冬\" class=\"headerlink\" title=\"大数据 2001 孙啸冬\"></a>大数据 2001 孙啸冬</h3><ul>\n<li>1.DataFrame 类读取一列的方式为 <code>dataFrame[‘列名’]</code></li>\n<li>2.DataFrame 类中一列为 Series 类</li>\n<li>3.将字符串转为时间对象为：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time.strptime(字符串,<span class=\"string\">&quot;%a, %d %b %Y %H:%M:%S GMT&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>4.时间对象转换为时间戳：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time.mktime(struct_time)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>5.遍历 DataFrame 时可以用</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> index, row <span class=\"keyword\">in</span> dataFrame.iterrows():</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>6.解析 JSON 方式为 <code>json.loads(Str)</code></li>\n<li>7.将 Series 中每项都进行处理可以用 map，例如把数据中作者那列的字符串用空格分隔并转化为列表：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataRaw[<span class=\"string\">&#x27;authors&#x27;</span>].<span class=\"built_in\">map</span>(<span class=\"keyword\">lambda</span> x: np.array(x.split(<span class=\"string\">&#x27;,&#x27;</span>)))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>8.选取 DataFrame 中的多列</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataRaw[[<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;title&#x27;</span><span class=\"string\">&#x27;versionsCount&#x27;</span>, <span class=\"string\">&#x27;diff&#x27;</span>,<span class=\"string\">&#x27;categories&#x27;</span>, <span class=\"string\">&#x27;update_date&#x27;</span>]]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>9.选取 DataFrame 中符合一定条件的行，例如选取 id 列中专业符合正则表达式的行</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataRaw[<span class=\"string\">&#x27;id&#x27;</span>][dataRaw.categories.<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;math.[A-Z]+&#x27;</span>)]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>10.画图时显示调用 <code>plt.show()</code>即可不显示相关文字</li>\n<li>11.画图时设置 x 轴标签的大小和旋转角度可以用以下方式</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.xticks(<span class=\"built_in\">range</span>(<span class=\"number\">32</span>), labels=tmp[<span class=\"string\">&#x27;type&#x27;</span>], rotation=<span class=\"number\">43</span>, fontsize=<span class=\"number\">8</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>12.对 Series 统计可以用以下方式</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataRaw[<span class=\"string\">&#x27;update_date&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>13.对 Series 排序</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataRaw[<span class=\"string\">&#x27;update_date&#x27;</span>].sort_index()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>14.在画时间序列图的时候发现 x 轴时这一整年的刻度，全部挤在一起看着非常难受，百度后发现以下方式更改子图的刻度密度，缺点是上面会多出一张多余的空白子图</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.xticks(rotation=<span class=\"number\">43</span>, fontsize=<span class=\"number\">8</span>)</span><br><span class=\"line\">fig, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">ax.plot(dataRaw[<span class=\"string\">&#x27;update_date&#x27;</span>].value_counts().sort_index())</span><br><span class=\"line\">ax.xaxis.set_major_locator(ticker.MultipleLocator(<span class=\"number\">20</span>))</span><br><span class=\"line\">plt.axis()</span><br><span class=\"line\">plt.xticks(rotation=<span class=\"number\">43</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>15.画词云图的方式：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> os <span class=\"keyword\">import</span> path</span><br><span class=\"line\"><span class=\"keyword\">from</span> wordcloud <span class=\"keyword\">import</span> WordCloud, ImageColorGenerator</span><br><span class=\"line\"><span class=\"comment\"># 需要绘制的目标字符串</span></span><br><span class=\"line\">string = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 停止词</span></span><br><span class=\"line\">stopword = [<span class=\"string\">&#x27;in&#x27;</span>, <span class=\"string\">&#x27;the&#x27;</span>, <span class=\"string\">&#x27;and&#x27;</span>, <span class=\"string\">&#x27;for&#x27;</span>, <span class=\"string\">&#x27;of&#x27;</span>, <span class=\"string\">&#x27;with&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;by&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;from&#x27;</span>, <span class=\"string\">&#x27;on&#x27;</span>, <span class=\"string\">&#x27;to&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 读取文件设置词云图的底图</span></span><br><span class=\"line\">d = path.dirname(__file__) <span class=\"keyword\">if</span> <span class=\"string\">&quot;__file__&quot;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">locals</span>() <span class=\"keyword\">else</span> os.getcwd()</span><br><span class=\"line\">alice_mask = np.array(Image.<span class=\"built_in\">open</span>(path.join(d, <span class=\"string\">&quot;alice_mask.png&quot;</span>)))</span><br><span class=\"line\"><span class=\"comment\"># 用相关属性构造WordCloud对象</span></span><br><span class=\"line\">wc = WordCloud(</span><br><span class=\"line\">    background_color=<span class=\"string\">&#x27;white&#x27;</span>,</span><br><span class=\"line\">    width=<span class=\"number\">1000</span>,</span><br><span class=\"line\">    height=<span class=\"number\">800</span>,</span><br><span class=\"line\">    mask=alice_mask,</span><br><span class=\"line\">    stopwords=stopword</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\"># 生成每个词出现的频率</span></span><br><span class=\"line\">wc.generate_from_text(string)</span><br><span class=\"line\"><span class=\"comment\"># 将词的颜色设置为底图位置上对应的颜色</span></span><br><span class=\"line\">wc.recolor(color_func=ImageColorGenerator(alice_mask))</span><br><span class=\"line\"><span class=\"comment\"># 绘制图片</span></span><br><span class=\"line\">wc.to_image()</span><br></pre></td></tr></table></figure>\n","feature":true,"text":"学习笔记大数据 2001 孙啸冬 1.DataFrame 类读取一列的方式为 dataFrame[‘列名’] 2.DataFrame 类中一列为 Series ...","permalink":"/post/python","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0\"><span class=\"toc-text\">学习笔记</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%A7%E6%95%B0%E6%8D%AE-2001-%E5%AD%99%E5%95%B8%E5%86%AC\"><span class=\"toc-text\">大数据 2001 孙啸冬</span></a></li></ol></li></ol></li></ol>","author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"记录SpringSecurity的一次实践","uid":"5453e6ed3ec87ccc7ede230d55c20b84","slug":"记录SpringSecurity的一次实践","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:33:01.700Z","comments":true,"path":"api/articles/记录SpringSecurity的一次实践.json","keywords":null,"cover":[],"text":"前言&ensp;&ensp;在项目中需要有用户和管理员登录的功能，用户登陆后观看视频记录观看时长，起先那做的真的时太潦草了完全没有意识，user 一张表，adm...","permalink":"/post/记录SpringSecurity的一次实践","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"金融大数据学习笔记","uid":"a50bc63133e87d6dc96d8b59bc058e1e","slug":"FinancialBigData","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:32:55.304Z","comments":true,"path":"api/articles/FinancialBigData.json","keywords":null,"cover":[],"text":"学习笔记大数据 2001 孙啸冬 1.爬取数据 (1) 爬取时以股票代码作为 URL 中的参数传入，但遇到没有当前股票代码时 DOM 树的结构和正常的不一样，导...","permalink":"/post/FinancialBigData","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}
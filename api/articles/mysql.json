{"title":"mysql","uid":"723f0bc187c0d9e9f528c9cd6627a1c3","slug":"mysql","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:33:08.589Z","comments":true,"path":"api/articles/mysql.json","keywords":null,"cover":null,"content":"<h1 id=\"一、内容整理\"><a href=\"#一、内容整理\" class=\"headerlink\" title=\"一、内容整理\"></a>一、内容整理</h1><h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><h4 id=\"1-如何定位慢查询\"><a href=\"#1-如何定位慢查询\" class=\"headerlink\" title=\"1. 如何定位慢查询\"></a>1. 如何定位慢查询</h4><p>使用 skywalking 等工具，追踪分析接口的执行时长，使用 mysql 的慢查询日志</p>\n<h4 id=\"2-sql-语句执行的很慢，如何分析\"><a href=\"#2-sql-语句执行的很慢，如何分析\" class=\"headerlink\" title=\"2. sql 语句执行的很慢，如何分析\"></a>2. sql 语句执行的很慢，如何分析</h4><p>使用 explan 语句分析 sql 的执行计划，结果会展示走了哪个索引，索引长度走了多少，语句的优化建议等信息。</p>\n<h4 id=\"3-索引概念及索引底层数据结构\"><a href=\"#3-索引概念及索引底层数据结构\" class=\"headerlink\" title=\"3. 索引概念及索引底层数据结构\"></a>3. 索引概念及索引底层数据结构</h4><p>索引是 mysql 额外维护的一些数据，用于快速查找到数据，和排序数据，底层是 B+树，和 B-树相比，B+树每个数据都储存在叶子节点，并且数据之间使用前后指针相连，形成一个双向链表，便于对数据进行范围查询，查找效率也更稳定。</p>\n<h4 id=\"4-聚簇索引和非聚簇索引、回表查询\"><a href=\"#4-聚簇索引和非聚簇索引、回表查询\" class=\"headerlink\" title=\"4. 聚簇索引和非聚簇索引、回表查询\"></a>4. 聚簇索引和非聚簇索引、回表查询</h4><p>聚簇索引是指索引下的是一行的数据，非聚簇索引是指索引下的数据不是完整的一行，回表查询是指走了非聚集索引，但非聚集索引下的数据不完整，需要根据非聚集索引中的聚集索引再去聚集索引中找到完整的数据</p>\n<h4 id=\"5-覆盖索引、超大分页优化\"><a href=\"#5-覆盖索引、超大分页优化\" class=\"headerlink\" title=\"5. 覆盖索引、超大分页优化\"></a>5. 覆盖索引、超大分页优化</h4><p>索引覆盖是指，走非聚集索引，非聚集索引中包含了要查找的所有字段，因此不需要再回表查询，因此我们常常将经常查找的字段设为联合索引，超大分页优化是使用子查询，在子查询中查找到主键的范围，然后再去聚簇索引中查找对应的行，提高性能。</p>\n<h4 id=\"6-索引创建的原则\"><a href=\"#6-索引创建的原则\" class=\"headerlink\" title=\"6. 索引创建的原则\"></a>6. 索引创建的原则</h4><ul>\n<li>很长的字段作为索引时使用前缀索引</li>\n<li>对需要经常一起查询的数据创建联合索引</li>\n</ul>\n<h4 id=\"7-什么情况下索引会失效\"><a href=\"#7-什么情况下索引会失效\" class=\"headerlink\" title=\"7. 什么情况下索引会失效\"></a>7. 什么情况下索引会失效</h4><ul>\n<li>违反最左前缀法则</li>\n<li>索引字段出现条件右边的索引会失效</li>\n<li>出现字符串左边的模糊匹配</li>\n<li>在索引的字段上进行计算</li>\n<li>字符串没有加引号</li>\n</ul>\n<h4 id=\"8-谈一谈你对-sql-优化的经验\"><a href=\"#8-谈一谈你对-sql-优化的经验\" class=\"headerlink\" title=\"8. 谈一谈你对 sql 优化的经验\"></a>8. 谈一谈你对 sql 优化的经验</h4><ul>\n<li>建表时根据数据的实际情况使用适合的数据类型</li>\n<li>如果字段定长，使用固定长度 char 类型，相比于不定长效率会更高</li>\n<li>为经常一起查询的字段建立索引</li>\n<li>分库分表</li>\n</ul>\n<h2 id=\"事务\"><a href=\"#事务\" class=\"headerlink\" title=\"事务\"></a>事务</h2><h4 id=\"1-事务的特性\"><a href=\"#1-事务的特性\" class=\"headerlink\" title=\"1. 事务的特性\"></a>1. 事务的特性</h4><ul>\n<li>A：原子性，一个事务是执行的最小单元</li>\n<li>C：一致性，要么全都执行成功，要么全部执行失败</li>\n<li>I：隔离性，别的事务的操作不会影响当前事务</li>\n<li>D：持久性，事务提交后对数据的更改是永久的</li>\n</ul>\n<h4 id=\"2-并发事务问题、隔离级别\"><a href=\"#2-并发事务问题、隔离级别\" class=\"headerlink\" title=\"2. 并发事务问题、隔离级别\"></a>2. 并发事务问题、隔离级别</h4><p>在并发事务中存在三个问题</p>\n<ul>\n<li>脏读，读取到了别的事务还没有提交的事务</li>\n<li>不可重复读，一个事务中两次读取到的同一条记录中有字段值不同</li>\n<li>幻读，查找时不存在这条记录，插入时却发现已经存在了这条记录</li>\n</ul>\n<p>为了解决这三个问题，事务又有四个不同的隔离级别</p>\n<ul>\n<li>读未提交，脏读、不可重复读和幻读都可能出现</li>\n<li>读已提交：只能避免脏读</li>\n<li>可重复读：可以避免脏读和不可重复读</li>\n<li>串行化：可以避免所有问题<br>mysql 默认的隔离级别时可重复读，这四个隔离级别中越往下数据安全性越高，但是性能越差</li>\n</ul>\n<h4 id=\"3-事务-undo-log-和-redo-log-的区别\"><a href=\"#3-事务-undo-log-和-redo-log-的区别\" class=\"headerlink\" title=\"3. 事务-undo log 和 redo log 的区别\"></a>3. 事务-undo log 和 redo log 的区别</h4><p>undo log 储存的是事务的回滚语句，比如事务中执行 delete，redo log 会生成 insert 语句。</p>\n<p>redo log 储存的是数据页的物理变化，mysql 直接操作的是内存中的缓冲池中的片，按照一定的频率同步到磁盘中，但有可能出现宕机，数据未同步到磁盘，造成数据丢失的情况，undo log 就是记录这种情况下的操作，数据库恢复时，读取 undo log 恢复未同步的数据</p>\n<h2 id=\"解释一下-mvcc\"><a href=\"#解释一下-mvcc\" class=\"headerlink\" title=\"解释一下 mvcc\"></a>解释一下 mvcc</h2><p>mvcc 是多版本并发控制，用于记录多个事务对数据的操作的版本，是的读操作和写操作没有冲突，主要由隐藏字段、undo log 和读视图组成 。</p>\n<ul>\n<li>隐藏字段：在每个表中mysql 会默认生成几个字段，包括了当前事务的 id，上一个版本的指针等信息。</li>\n<li>undo log：存储版本数据，在内部会形成一个版本链，在多个事务并行操作某一行记录，记录不同事务修改数据的版本</li>\n</ul>\n<p> readView 解决的是一个事务查询选择版本的问题，在内部定义了一些匹配规则和当前的一些事务 id 判断该访问那个版本的数据，不同的隔离级别快照读是不一样的，最终的访问的结果不一样。如果是 rc 隔离级别，每一次执行快照读时生成 ReadView，如果是 rr 隔离级别仅在事务中第一次执行快照读时生成 ReadView，后续复用</p>\n<h4 id=\"主从同步\"><a href=\"#主从同步\" class=\"headerlink\" title=\"主从同步\"></a>主从同步</h4><p>主库将 DML 和 DDL 生成 binlog 二进制文件，但不包括 selet 和 show 命令，然后从机获取主机中的 binlog，加载到从机的中间日志，从机读取中间日志，执行命令，完成同步</p>\n<h4 id=\"分库分表\"><a href=\"#分库分表\" class=\"headerlink\" title=\"分库分表\"></a>分库分表</h4><h1 id=\"二、面试题\"><a href=\"#二、面试题\" class=\"headerlink\" title=\"二、面试题\"></a>二、面试题</h1>","text":"一、内容整理优化1. 如何定位慢查询使用 skywalking 等工具，追踪分析接口的执行时长，使用 mysql 的慢查询日志 2. sql 语句执行的很慢，如...","permalink":"/post/mysql","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%86%85%E5%AE%B9%E6%95%B4%E7%90%86\"><span class=\"toc-text\">一、内容整理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E5%A6%82%E4%BD%95%E5%AE%9A%E4%BD%8D%E6%85%A2%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">1. 如何定位慢查询</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-sql-%E8%AF%AD%E5%8F%A5%E6%89%A7%E8%A1%8C%E7%9A%84%E5%BE%88%E6%85%A2%EF%BC%8C%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\">2. sql 语句执行的很慢，如何分析</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E7%B4%A2%E5%BC%95%E6%A6%82%E5%BF%B5%E5%8F%8A%E7%B4%A2%E5%BC%95%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">3. 索引概念及索引底层数据结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95%E5%92%8C%E9%9D%9E%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95%E3%80%81%E5%9B%9E%E8%A1%A8%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">4. 聚簇索引和非聚簇索引、回表查询</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-%E8%A6%86%E7%9B%96%E7%B4%A2%E5%BC%95%E3%80%81%E8%B6%85%E5%A4%A7%E5%88%86%E9%A1%B5%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">5. 覆盖索引、超大分页优化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-%E7%B4%A2%E5%BC%95%E5%88%9B%E5%BB%BA%E7%9A%84%E5%8E%9F%E5%88%99\"><span class=\"toc-text\">6. 索引创建的原则</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E7%B4%A2%E5%BC%95%E4%BC%9A%E5%A4%B1%E6%95%88\"><span class=\"toc-text\">7. 什么情况下索引会失效</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-%E8%B0%88%E4%B8%80%E8%B0%88%E4%BD%A0%E5%AF%B9-sql-%E4%BC%98%E5%8C%96%E7%9A%84%E7%BB%8F%E9%AA%8C\"><span class=\"toc-text\">8. 谈一谈你对 sql 优化的经验</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E5%8A%A1\"><span class=\"toc-text\">事务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E4%BA%8B%E5%8A%A1%E7%9A%84%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">1. 事务的特性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%B9%B6%E5%8F%91%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98%E3%80%81%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB\"><span class=\"toc-text\">2. 并发事务问题、隔离级别</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E4%BA%8B%E5%8A%A1-undo-log-%E5%92%8C-redo-log-%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">3. 事务-undo log 和 redo log 的区别</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%87%8A%E4%B8%80%E4%B8%8B-mvcc\"><span class=\"toc-text\">解释一下 mvcc</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5\"><span class=\"toc-text\">主从同步</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8\"><span class=\"toc-text\">分库分表</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E9%9D%A2%E8%AF%95%E9%A2%98\"><span class=\"toc-text\">二、面试题</span></a></li></ol>","author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"框架","uid":"71abd5ae262d1609d9544498b5f6da4f","slug":"framework","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:33:08.241Z","comments":true,"path":"api/articles/framework.json","keywords":null,"cover":null,"text":"一、内容整理Spring1. 单例 bean 线程安全单例 bean 不是线程安全的 2. Spring-AOP面向切面编程，可以增强某些类的功能，其中需要设置...","permalink":"/post/framework","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"redis","uid":"eb5f3adb17521be888d5fac1c7b84dc0","slug":"redis","date":"2023-12-07T16:34:56.000Z","updated":"2023-12-08T01:33:08.633Z","comments":true,"path":"api/articles/redis.json","keywords":null,"cover":[],"text":"一、内容整理缓存1. 缓存穿透有大量的请求访问不存在的 key，首先访问 redis，发现不存在当前 key 后 后再访问数据库，因为并不存在这条数据，当前查询...","permalink":"/post/redis","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"孙冬冬","slug":"blog-author","avatar":"/image/avatar.jpg","link":"/","description":"哈哈哈","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}